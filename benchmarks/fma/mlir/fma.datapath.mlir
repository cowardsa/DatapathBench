module {
  hw.module @fma(in %a : i16, in %b : i16, in %c : i16, out res : i32) {
    %c0_i17 = hw.constant 0 : i17
    %c0_i18 = hw.constant 0 : i18
    %c0_i19 = hw.constant 0 : i19
    %c0_i20 = hw.constant 0 : i20
    %c0_i21 = hw.constant 0 : i21
    %c0_i22 = hw.constant 0 : i22
    %c0_i23 = hw.constant 0 : i23
    %c0_i24 = hw.constant 0 : i24
    %c0_i25 = hw.constant 0 : i25
    %c0_i26 = hw.constant 0 : i26
    %c0_i27 = hw.constant 0 : i27
    %c0_i28 = hw.constant 0 : i28
    %c0_i29 = hw.constant 0 : i29
    %c0_i30 = hw.constant 0 : i30
    %c0_i31 = hw.constant 0 : i31
    %c0_i15 = hw.constant 0 : i15
    %c0_i14 = hw.constant 0 : i14
    %c0_i13 = hw.constant 0 : i13
    %c0_i12 = hw.constant 0 : i12
    %c0_i11 = hw.constant 0 : i11
    %c0_i10 = hw.constant 0 : i10
    %c0_i9 = hw.constant 0 : i9
    %c0_i8 = hw.constant 0 : i8
    %c0_i7 = hw.constant 0 : i7
    %c0_i6 = hw.constant 0 : i6
    %c0_i5 = hw.constant 0 : i5
    %c0_i4 = hw.constant 0 : i4
    %c0_i3 = hw.constant 0 : i3
    %c0_i2 = hw.constant 0 : i2
    %false = hw.constant false
    %c0_i32 = hw.constant 0 : i32
    %c0_i16 = hw.constant 0 : i16
    %0 = comb.concat %c0_i16, %b : i16, i16
    %1 = comb.extract %a from 0 : (i16) -> i1
    %2 = comb.extract %a from 1 : (i16) -> i1
    %3 = comb.extract %a from 2 : (i16) -> i1
    %4 = comb.extract %a from 3 : (i16) -> i1
    %5 = comb.extract %a from 4 : (i16) -> i1
    %6 = comb.extract %a from 5 : (i16) -> i1
    %7 = comb.extract %a from 6 : (i16) -> i1
    %8 = comb.extract %a from 7 : (i16) -> i1
    %9 = comb.extract %a from 8 : (i16) -> i1
    %10 = comb.extract %a from 9 : (i16) -> i1
    %11 = comb.extract %a from 10 : (i16) -> i1
    %12 = comb.extract %a from 11 : (i16) -> i1
    %13 = comb.extract %a from 12 : (i16) -> i1
    %14 = comb.extract %a from 13 : (i16) -> i1
    %15 = comb.extract %a from 14 : (i16) -> i1
    %16 = comb.extract %a from 15 : (i16) -> i1
    %17 = comb.mux %1, %0, %c0_i32 : i32
    %18 = comb.concat %c0_i15, %b : i15, i16
    %19 = comb.mux %2, %18, %c0_i31 : i31
    %20 = comb.concat %19, %false : i31, i1
    %21 = comb.concat %c0_i14, %b : i14, i16
    %22 = comb.mux %3, %21, %c0_i30 : i30
    %23 = comb.concat %22, %c0_i2 : i30, i2
    %24 = comb.concat %c0_i13, %b : i13, i16
    %25 = comb.mux %4, %24, %c0_i29 : i29
    %26 = comb.concat %25, %c0_i3 : i29, i3
    %27 = comb.concat %c0_i12, %b : i12, i16
    %28 = comb.mux %5, %27, %c0_i28 : i28
    %29 = comb.concat %28, %c0_i4 : i28, i4
    %30 = comb.concat %c0_i11, %b : i11, i16
    %31 = comb.mux %6, %30, %c0_i27 : i27
    %32 = comb.concat %31, %c0_i5 : i27, i5
    %33 = comb.concat %c0_i10, %b : i10, i16
    %34 = comb.mux %7, %33, %c0_i26 : i26
    %35 = comb.concat %34, %c0_i6 : i26, i6
    %36 = comb.concat %c0_i9, %b : i9, i16
    %37 = comb.mux %8, %36, %c0_i25 : i25
    %38 = comb.concat %37, %c0_i7 : i25, i7
    %39 = comb.concat %c0_i8, %b : i8, i16
    %40 = comb.mux %9, %39, %c0_i24 : i24
    %41 = comb.concat %40, %c0_i8 : i24, i8
    %42 = comb.concat %c0_i7, %b : i7, i16
    %43 = comb.mux %10, %42, %c0_i23 : i23
    %44 = comb.concat %43, %c0_i9 : i23, i9
    %45 = comb.concat %c0_i6, %b : i6, i16
    %46 = comb.mux %11, %45, %c0_i22 : i22
    %47 = comb.concat %46, %c0_i10 : i22, i10
    %48 = comb.concat %c0_i5, %b : i5, i16
    %49 = comb.mux %12, %48, %c0_i21 : i21
    %50 = comb.concat %49, %c0_i11 : i21, i11
    %51 = comb.concat %c0_i4, %b : i4, i16
    %52 = comb.mux %13, %51, %c0_i20 : i20
    %53 = comb.concat %52, %c0_i12 : i20, i12
    %54 = comb.concat %c0_i3, %b : i3, i16
    %55 = comb.mux %14, %54, %c0_i19 : i19
    %56 = comb.concat %55, %c0_i13 : i19, i13
    %57 = comb.concat %c0_i2, %b : i2, i16
    %58 = comb.mux %15, %57, %c0_i18 : i18
    %59 = comb.concat %58, %c0_i14 : i18, i14
    %60 = comb.concat %false, %b : i1, i16
    %61 = comb.mux %16, %60, %c0_i17 : i17
    %62 = comb.concat %61, %c0_i15 : i17, i15
    %63 = comb.concat %c0_i16, %c : i16, i16
    %64:2 = datapath.compress %17, %20, %23, %26, %29, %32, %35, %38, %41, %44, %47, %50, %53, %56, %59, %62, %63 : 17 x i32 -> (i32, i32)
    %65 = comb.add bin %64#0, %64#1 : i32
    hw.output %65 : i32
  }
}

