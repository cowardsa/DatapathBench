; solver scope 0
(declare-const tmp (_ BitVec 16))
(declare-const tmp_0 (_ BitVec 16))
(declare-const tmp_1 (_ BitVec 16))
(declare-const tmp_2 (_ BitVec 32))
(declare-const tmp_3 (_ BitVec 32))
(assert (let ((tmp_4 (bvadd tmp_2 tmp_3)))
        (let ((tmp_5 (concat #x0000 tmp_1)))
        (let ((tmp_6 (concat #b0 tmp_0)))
        (let ((tmp_7 ((_ extract 15 15) tmp)))
        (let ((tmp_8 (= tmp_7 #b1)))
        (let ((tmp_9 (ite tmp_8 tmp_6 #b00000000000000000)))
        (let ((tmp_10 (concat tmp_9 #b000000000000000)))
        (let ((tmp_11 (concat #b00 tmp_0)))
        (let ((tmp_12 ((_ extract 14 14) tmp)))
        (let ((tmp_13 (= tmp_12 #b1)))
        (let ((tmp_14 (ite tmp_13 tmp_11 #b000000000000000000)))
        (let ((tmp_15 (concat tmp_14 #b00000000000000)))
        (let ((tmp_16 (concat #b000 tmp_0)))
        (let ((tmp_17 ((_ extract 13 13) tmp)))
        (let ((tmp_18 (= tmp_17 #b1)))
        (let ((tmp_19 (ite tmp_18 tmp_16 #b0000000000000000000)))
        (let ((tmp_20 (concat tmp_19 #b0000000000000)))
        (let ((tmp_21 (concat #x0 tmp_0)))
        (let ((tmp_22 ((_ extract 12 12) tmp)))
        (let ((tmp_23 (= tmp_22 #b1)))
        (let ((tmp_24 (ite tmp_23 tmp_21 #x00000)))
        (let ((tmp_25 (concat tmp_24 #x000)))
        (let ((tmp_26 (concat #b00000 tmp_0)))
        (let ((tmp_27 ((_ extract 11 11) tmp)))
        (let ((tmp_28 (= tmp_27 #b1)))
        (let ((tmp_29 (ite tmp_28 tmp_26 #b000000000000000000000)))
        (let ((tmp_30 (concat tmp_29 #b00000000000)))
        (let ((tmp_31 (concat #b000000 tmp_0)))
        (let ((tmp_32 ((_ extract 10 10) tmp)))
        (let ((tmp_33 (= tmp_32 #b1)))
        (let ((tmp_34 (ite tmp_33 tmp_31 #b0000000000000000000000)))
        (let ((tmp_35 (concat tmp_34 #b0000000000)))
        (let ((tmp_36 (concat #b0000000 tmp_0)))
        (let ((tmp_37 ((_ extract 9 9) tmp)))
        (let ((tmp_38 (= tmp_37 #b1)))
        (let ((tmp_39 (ite tmp_38 tmp_36 #b00000000000000000000000)))
        (let ((tmp_40 (concat tmp_39 #b000000000)))
        (let ((tmp_41 (concat #x00 tmp_0)))
        (let ((tmp_42 ((_ extract 8 8) tmp)))
        (let ((tmp_43 (= tmp_42 #b1)))
        (let ((tmp_44 (ite tmp_43 tmp_41 #x000000)))
        (let ((tmp_45 (concat tmp_44 #x00)))
        (let ((tmp_46 (concat #b000000000 tmp_0)))
        (let ((tmp_47 ((_ extract 7 7) tmp)))
        (let ((tmp_48 (= tmp_47 #b1)))
        (let ((tmp_49 (ite tmp_48 tmp_46 #b0000000000000000000000000)))
        (let ((tmp_50 (concat tmp_49 #b0000000)))
        (let ((tmp_51 (concat #b0000000000 tmp_0)))
        (let ((tmp_52 ((_ extract 6 6) tmp)))
        (let ((tmp_53 (= tmp_52 #b1)))
        (let ((tmp_54 (ite tmp_53 tmp_51 #b00000000000000000000000000)))
        (let ((tmp_55 (concat tmp_54 #b000000)))
        (let ((tmp_56 (concat #b00000000000 tmp_0)))
        (let ((tmp_57 ((_ extract 5 5) tmp)))
        (let ((tmp_58 (= tmp_57 #b1)))
        (let ((tmp_59 (ite tmp_58 tmp_56 #b000000000000000000000000000)))
        (let ((tmp_60 (concat tmp_59 #b00000)))
        (let ((tmp_61 (concat #x000 tmp_0)))
        (let ((tmp_62 ((_ extract 4 4) tmp)))
        (let ((tmp_63 (= tmp_62 #b1)))
        (let ((tmp_64 (ite tmp_63 tmp_61 #x0000000)))
        (let ((tmp_65 (concat tmp_64 #x0)))
        (let ((tmp_66 (concat #b0000000000000 tmp_0)))
        (let ((tmp_67 ((_ extract 3 3) tmp)))
        (let ((tmp_68 (= tmp_67 #b1)))
        (let ((tmp_69 (ite tmp_68 tmp_66 #b00000000000000000000000000000)))
        (let ((tmp_70 (concat tmp_69 #b000)))
        (let ((tmp_71 (concat #b00000000000000 tmp_0)))
        (let ((tmp_72 ((_ extract 2 2) tmp)))
        (let ((tmp_73 (= tmp_72 #b1)))
        (let ((tmp_74 (ite tmp_73 tmp_71 #b000000000000000000000000000000)))
        (let ((tmp_75 (concat tmp_74 #b00)))
        (let ((tmp_76 (concat #b000000000000000 tmp_0)))
        (let ((tmp_77 ((_ extract 1 1) tmp)))
        (let ((tmp_78 (= tmp_77 #b1)))
        (let ((tmp_79 (ite tmp_78 tmp_76 #b0000000000000000000000000000000)))
        (let ((tmp_80 (concat tmp_79 #b0)))
        (let ((tmp_81 (concat #x0000 tmp_0)))
        (let ((tmp_82 ((_ extract 0 0) tmp)))
        (let ((tmp_83 (= tmp_82 #b1)))
        (let ((tmp_84 (ite tmp_83 tmp_81 #x00000000)))
        (let ((tmp_85 (bvadd tmp_84 tmp_80)))
        (let ((tmp_86 (bvadd tmp_85 tmp_75)))
        (let ((tmp_87 (bvadd tmp_86 tmp_70)))
        (let ((tmp_88 (bvadd tmp_87 tmp_65)))
        (let ((tmp_89 (bvadd tmp_88 tmp_60)))
        (let ((tmp_90 (bvadd tmp_89 tmp_55)))
        (let ((tmp_91 (bvadd tmp_90 tmp_50)))
        (let ((tmp_92 (bvadd tmp_91 tmp_45)))
        (let ((tmp_93 (bvadd tmp_92 tmp_40)))
        (let ((tmp_94 (bvadd tmp_93 tmp_35)))
        (let ((tmp_95 (bvadd tmp_94 tmp_30)))
        (let ((tmp_96 (bvadd tmp_95 tmp_25)))
        (let ((tmp_97 (bvadd tmp_96 tmp_20)))
        (let ((tmp_98 (bvadd tmp_97 tmp_15)))
        (let ((tmp_99 (bvadd tmp_98 tmp_10)))
        (let ((tmp_100 (bvadd tmp_99 tmp_5)))
        (let ((tmp_101 (= tmp_100 tmp_4)))
        tmp_101)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (let ((tmp_102 (bvadd tmp_2 tmp_3)))
        (let ((tmp_103 (concat #x0000 tmp_1)))
        (let ((tmp_104 (concat #x0000 tmp_0)))
        (let ((tmp_105 (concat #x0000 tmp)))
        (let ((tmp_106 (bvmul tmp_105 tmp_104)))
        (let ((tmp_107 (bvadd tmp_106 tmp_103)))
        (let ((tmp_108 (distinct tmp_107 tmp_102)))
        tmp_108))))))))
(check-sat)
(reset)
