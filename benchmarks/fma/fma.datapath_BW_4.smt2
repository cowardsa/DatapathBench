; solver scope 0
(set-logic QF_BV)
(declare-const tmp (_ BitVec 4))
(declare-const tmp_0 (_ BitVec 4))
(declare-const tmp_1 (_ BitVec 4))
(declare-const tmp_2 (_ BitVec 8))
(declare-const tmp_3 (_ BitVec 8))
(assert (let ((tmp_4 (bvadd tmp_2 tmp_3)))
        (let ((tmp_5 (concat #x0 tmp_1)))
        (let ((tmp_6 (concat #b0 tmp_0)))
        (let ((tmp_7 ((_ extract 3 3) tmp)))
        (let ((tmp_8 (= tmp_7 #b1)))
        (let ((tmp_9 (ite tmp_8 tmp_6 #b00000)))
        (let ((tmp_10 (concat tmp_9 #b000)))
        (let ((tmp_11 (concat #b00 tmp_0)))
        (let ((tmp_12 ((_ extract 2 2) tmp)))
        (let ((tmp_13 (= tmp_12 #b1)))
        (let ((tmp_14 (ite tmp_13 tmp_11 #b000000)))
        (let ((tmp_15 (concat tmp_14 #b00)))
        (let ((tmp_16 (concat #b000 tmp_0)))
        (let ((tmp_17 ((_ extract 1 1) tmp)))
        (let ((tmp_18 (= tmp_17 #b1)))
        (let ((tmp_19 (ite tmp_18 tmp_16 #b0000000)))
        (let ((tmp_20 (concat tmp_19 #b0)))
        (let ((tmp_21 (concat #x0 tmp_0)))
        (let ((tmp_22 ((_ extract 0 0) tmp)))
        (let ((tmp_23 (= tmp_22 #b1)))
        (let ((tmp_24 (ite tmp_23 tmp_21 #x00)))
        (let ((tmp_25 (bvadd tmp_24 tmp_20)))
        (let ((tmp_26 (bvadd tmp_25 tmp_15)))
        (let ((tmp_27 (bvadd tmp_26 tmp_10)))
        (let ((tmp_28 (bvadd tmp_27 tmp_5)))
        (let ((tmp_29 (= tmp_28 tmp_4)))
        tmp_29)))))))))))))))))))))))))))
(assert (let ((tmp_30 (bvadd tmp_2 tmp_3)))
        (let ((tmp_31 (concat #x0 tmp_1)))
        (let ((tmp_32 (concat #x0 tmp_0)))
        (let ((tmp_33 (concat #x0 tmp)))
        (let ((tmp_34 (bvmul tmp_33 tmp_32)))
        (let ((tmp_35 (bvadd tmp_34 tmp_31)))
        (let ((tmp_36 (distinct tmp_35 tmp_30)))
        tmp_36))))))))
(check-sat)
(reset)
