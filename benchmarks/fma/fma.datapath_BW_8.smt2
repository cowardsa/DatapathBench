; solver scope 0
(set-logic QF_BV)
(declare-const tmp (_ BitVec 8))
(declare-const tmp_0 (_ BitVec 8))
(declare-const tmp_1 (_ BitVec 8))
(declare-const tmp_2 (_ BitVec 16))
(declare-const tmp_3 (_ BitVec 16))
(assert (let ((tmp_4 (bvadd tmp_2 tmp_3)))
        (let ((tmp_5 (concat #x00 tmp_1)))
        (let ((tmp_6 (concat #b0 tmp_0)))
        (let ((tmp_7 ((_ extract 7 7) tmp)))
        (let ((tmp_8 (= tmp_7 #b1)))
        (let ((tmp_9 (ite tmp_8 tmp_6 #b000000000)))
        (let ((tmp_10 (concat tmp_9 #b0000000)))
        (let ((tmp_11 (concat #b00 tmp_0)))
        (let ((tmp_12 ((_ extract 6 6) tmp)))
        (let ((tmp_13 (= tmp_12 #b1)))
        (let ((tmp_14 (ite tmp_13 tmp_11 #b0000000000)))
        (let ((tmp_15 (concat tmp_14 #b000000)))
        (let ((tmp_16 (concat #b000 tmp_0)))
        (let ((tmp_17 ((_ extract 5 5) tmp)))
        (let ((tmp_18 (= tmp_17 #b1)))
        (let ((tmp_19 (ite tmp_18 tmp_16 #b00000000000)))
        (let ((tmp_20 (concat tmp_19 #b00000)))
        (let ((tmp_21 (concat #x0 tmp_0)))
        (let ((tmp_22 ((_ extract 4 4) tmp)))
        (let ((tmp_23 (= tmp_22 #b1)))
        (let ((tmp_24 (ite tmp_23 tmp_21 #x000)))
        (let ((tmp_25 (concat tmp_24 #x0)))
        (let ((tmp_26 (concat #b00000 tmp_0)))
        (let ((tmp_27 ((_ extract 3 3) tmp)))
        (let ((tmp_28 (= tmp_27 #b1)))
        (let ((tmp_29 (ite tmp_28 tmp_26 #b0000000000000)))
        (let ((tmp_30 (concat tmp_29 #b000)))
        (let ((tmp_31 (concat #b000000 tmp_0)))
        (let ((tmp_32 ((_ extract 2 2) tmp)))
        (let ((tmp_33 (= tmp_32 #b1)))
        (let ((tmp_34 (ite tmp_33 tmp_31 #b00000000000000)))
        (let ((tmp_35 (concat tmp_34 #b00)))
        (let ((tmp_36 (concat #b0000000 tmp_0)))
        (let ((tmp_37 ((_ extract 1 1) tmp)))
        (let ((tmp_38 (= tmp_37 #b1)))
        (let ((tmp_39 (ite tmp_38 tmp_36 #b000000000000000)))
        (let ((tmp_40 (concat tmp_39 #b0)))
        (let ((tmp_41 (concat #x00 tmp_0)))
        (let ((tmp_42 ((_ extract 0 0) tmp)))
        (let ((tmp_43 (= tmp_42 #b1)))
        (let ((tmp_44 (ite tmp_43 tmp_41 #x0000)))
        (let ((tmp_45 (bvadd tmp_44 tmp_40)))
        (let ((tmp_46 (bvadd tmp_45 tmp_35)))
        (let ((tmp_47 (bvadd tmp_46 tmp_30)))
        (let ((tmp_48 (bvadd tmp_47 tmp_25)))
        (let ((tmp_49 (bvadd tmp_48 tmp_20)))
        (let ((tmp_50 (bvadd tmp_49 tmp_15)))
        (let ((tmp_51 (bvadd tmp_50 tmp_10)))
        (let ((tmp_52 (bvadd tmp_51 tmp_5)))
        (let ((tmp_53 (= tmp_52 tmp_4)))
        tmp_53)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (let ((tmp_54 (bvadd tmp_2 tmp_3)))
        (let ((tmp_55 (concat #x00 tmp_1)))
        (let ((tmp_56 (concat #x00 tmp_0)))
        (let ((tmp_57 (concat #x00 tmp)))
        (let ((tmp_58 (bvmul tmp_57 tmp_56)))
        (let ((tmp_59 (bvadd tmp_58 tmp_55)))
        (let ((tmp_60 (distinct tmp_59 tmp_54)))
        tmp_60))))))))
(check-sat)
(reset)
