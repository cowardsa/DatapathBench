; solver scope 0
(set-logic QF_BV)
(declare-const tmp (_ BitVec 4))
(declare-const tmp_0 (_ BitVec 4))
(declare-const tmp_1 (_ BitVec 4))
(declare-const tmp_2 (_ BitVec 4))
(declare-const tmp_3 (_ BitVec 8))
(declare-const tmp_4 (_ BitVec 8))
(assert (let ((tmp_5 (bvadd tmp_3 tmp_4)))
        (let ((tmp_6 (concat #b0 tmp_2)))
        (let ((tmp_7 ((_ extract 3 3) tmp_1)))
        (let ((tmp_8 (= tmp_7 #b1)))
        (let ((tmp_9 (ite tmp_8 tmp_6 #b00000)))
        (let ((tmp_10 (concat tmp_9 #b000)))
        (let ((tmp_11 (concat #b00 tmp_2)))
        (let ((tmp_12 ((_ extract 2 2) tmp_1)))
        (let ((tmp_13 (= tmp_12 #b1)))
        (let ((tmp_14 (ite tmp_13 tmp_11 #b000000)))
        (let ((tmp_15 (concat tmp_14 #b00)))
        (let ((tmp_16 (concat #b000 tmp_2)))
        (let ((tmp_17 ((_ extract 1 1) tmp_1)))
        (let ((tmp_18 (= tmp_17 #b1)))
        (let ((tmp_19 (ite tmp_18 tmp_16 #b0000000)))
        (let ((tmp_20 (concat tmp_19 #b0)))
        (let ((tmp_21 (concat #x0 tmp_2)))
        (let ((tmp_22 ((_ extract 0 0) tmp_1)))
        (let ((tmp_23 (= tmp_22 #b1)))
        (let ((tmp_24 (ite tmp_23 tmp_21 #x00)))
        (let ((tmp_25 (concat #b0 tmp_0)))
        (let ((tmp_26 ((_ extract 3 3) tmp)))
        (let ((tmp_27 (= tmp_26 #b1)))
        (let ((tmp_28 (ite tmp_27 tmp_25 #b00000)))
        (let ((tmp_29 (concat tmp_28 #b000)))
        (let ((tmp_30 (concat #b00 tmp_0)))
        (let ((tmp_31 ((_ extract 2 2) tmp)))
        (let ((tmp_32 (= tmp_31 #b1)))
        (let ((tmp_33 (ite tmp_32 tmp_30 #b000000)))
        (let ((tmp_34 (concat tmp_33 #b00)))
        (let ((tmp_35 (concat #b000 tmp_0)))
        (let ((tmp_36 ((_ extract 1 1) tmp)))
        (let ((tmp_37 (= tmp_36 #b1)))
        (let ((tmp_38 (ite tmp_37 tmp_35 #b0000000)))
        (let ((tmp_39 (concat tmp_38 #b0)))
        (let ((tmp_40 (concat #x0 tmp_0)))
        (let ((tmp_41 ((_ extract 0 0) tmp)))
        (let ((tmp_42 (= tmp_41 #b1)))
        (let ((tmp_43 (ite tmp_42 tmp_40 #x00)))
        (let ((tmp_44 (bvadd tmp_43 tmp_39)))
        (let ((tmp_45 (bvadd tmp_44 tmp_34)))
        (let ((tmp_46 (bvadd tmp_45 tmp_29)))
        (let ((tmp_47 (bvadd tmp_46 tmp_24)))
        (let ((tmp_48 (bvadd tmp_47 tmp_20)))
        (let ((tmp_49 (bvadd tmp_48 tmp_15)))
        (let ((tmp_50 (bvadd tmp_49 tmp_10)))
        (let ((tmp_51 (= tmp_50 tmp_5)))
        tmp_51))))))))))))))))))))))))))))))))))))))))))))))))
(assert (let ((tmp_52 (bvadd tmp_3 tmp_4)))
        (let ((tmp_53 (concat #x0 tmp_2)))
        (let ((tmp_54 (concat #x0 tmp_1)))
        (let ((tmp_55 (bvmul tmp_54 tmp_53)))
        (let ((tmp_56 (concat #x0 tmp_0)))
        (let ((tmp_57 (concat #x0 tmp)))
        (let ((tmp_58 (bvmul tmp_57 tmp_56)))
        (let ((tmp_59 (bvadd tmp_58 tmp_55)))
        (let ((tmp_60 (distinct tmp_59 tmp_52)))
        tmp_60))))))))))
(check-sat)
(reset)
