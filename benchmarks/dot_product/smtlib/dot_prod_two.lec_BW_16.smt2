; solver scope 0
(declare-const tmp (_ BitVec 16))
(declare-const tmp_0 (_ BitVec 16))
(declare-const tmp_1 (_ BitVec 16))
(declare-const tmp_2 (_ BitVec 16))
(declare-const tmp_3 (_ BitVec 32))
(declare-const tmp_4 (_ BitVec 32))
(assert (let ((tmp_5 (bvadd tmp_3 tmp_4)))
        (let ((tmp_6 (concat #b0 tmp_2)))
        (let ((tmp_7 ((_ extract 15 15) tmp_1)))
        (let ((tmp_8 (= tmp_7 #b1)))
        (let ((tmp_9 (ite tmp_8 tmp_6 #b00000000000000000)))
        (let ((tmp_10 (concat tmp_9 #b000000000000000)))
        (let ((tmp_11 (concat #b00 tmp_2)))
        (let ((tmp_12 ((_ extract 14 14) tmp_1)))
        (let ((tmp_13 (= tmp_12 #b1)))
        (let ((tmp_14 (ite tmp_13 tmp_11 #b000000000000000000)))
        (let ((tmp_15 (concat tmp_14 #b00000000000000)))
        (let ((tmp_16 (concat #b000 tmp_2)))
        (let ((tmp_17 ((_ extract 13 13) tmp_1)))
        (let ((tmp_18 (= tmp_17 #b1)))
        (let ((tmp_19 (ite tmp_18 tmp_16 #b0000000000000000000)))
        (let ((tmp_20 (concat tmp_19 #b0000000000000)))
        (let ((tmp_21 (concat #x0 tmp_2)))
        (let ((tmp_22 ((_ extract 12 12) tmp_1)))
        (let ((tmp_23 (= tmp_22 #b1)))
        (let ((tmp_24 (ite tmp_23 tmp_21 #x00000)))
        (let ((tmp_25 (concat tmp_24 #x000)))
        (let ((tmp_26 (concat #b00000 tmp_2)))
        (let ((tmp_27 ((_ extract 11 11) tmp_1)))
        (let ((tmp_28 (= tmp_27 #b1)))
        (let ((tmp_29 (ite tmp_28 tmp_26 #b000000000000000000000)))
        (let ((tmp_30 (concat tmp_29 #b00000000000)))
        (let ((tmp_31 (concat #b000000 tmp_2)))
        (let ((tmp_32 ((_ extract 10 10) tmp_1)))
        (let ((tmp_33 (= tmp_32 #b1)))
        (let ((tmp_34 (ite tmp_33 tmp_31 #b0000000000000000000000)))
        (let ((tmp_35 (concat tmp_34 #b0000000000)))
        (let ((tmp_36 (concat #b0000000 tmp_2)))
        (let ((tmp_37 ((_ extract 9 9) tmp_1)))
        (let ((tmp_38 (= tmp_37 #b1)))
        (let ((tmp_39 (ite tmp_38 tmp_36 #b00000000000000000000000)))
        (let ((tmp_40 (concat tmp_39 #b000000000)))
        (let ((tmp_41 (concat #x00 tmp_2)))
        (let ((tmp_42 ((_ extract 8 8) tmp_1)))
        (let ((tmp_43 (= tmp_42 #b1)))
        (let ((tmp_44 (ite tmp_43 tmp_41 #x000000)))
        (let ((tmp_45 (concat tmp_44 #x00)))
        (let ((tmp_46 (concat #b000000000 tmp_2)))
        (let ((tmp_47 ((_ extract 7 7) tmp_1)))
        (let ((tmp_48 (= tmp_47 #b1)))
        (let ((tmp_49 (ite tmp_48 tmp_46 #b0000000000000000000000000)))
        (let ((tmp_50 (concat tmp_49 #b0000000)))
        (let ((tmp_51 (concat #b0000000000 tmp_2)))
        (let ((tmp_52 ((_ extract 6 6) tmp_1)))
        (let ((tmp_53 (= tmp_52 #b1)))
        (let ((tmp_54 (ite tmp_53 tmp_51 #b00000000000000000000000000)))
        (let ((tmp_55 (concat tmp_54 #b000000)))
        (let ((tmp_56 (concat #b00000000000 tmp_2)))
        (let ((tmp_57 ((_ extract 5 5) tmp_1)))
        (let ((tmp_58 (= tmp_57 #b1)))
        (let ((tmp_59 (ite tmp_58 tmp_56 #b000000000000000000000000000)))
        (let ((tmp_60 (concat tmp_59 #b00000)))
        (let ((tmp_61 (concat #x000 tmp_2)))
        (let ((tmp_62 ((_ extract 4 4) tmp_1)))
        (let ((tmp_63 (= tmp_62 #b1)))
        (let ((tmp_64 (ite tmp_63 tmp_61 #x0000000)))
        (let ((tmp_65 (concat tmp_64 #x0)))
        (let ((tmp_66 (concat #b0000000000000 tmp_2)))
        (let ((tmp_67 ((_ extract 3 3) tmp_1)))
        (let ((tmp_68 (= tmp_67 #b1)))
        (let ((tmp_69 (ite tmp_68 tmp_66 #b00000000000000000000000000000)))
        (let ((tmp_70 (concat tmp_69 #b000)))
        (let ((tmp_71 (concat #b00000000000000 tmp_2)))
        (let ((tmp_72 ((_ extract 2 2) tmp_1)))
        (let ((tmp_73 (= tmp_72 #b1)))
        (let ((tmp_74 (ite tmp_73 tmp_71 #b000000000000000000000000000000)))
        (let ((tmp_75 (concat tmp_74 #b00)))
        (let ((tmp_76 (concat #b000000000000000 tmp_2)))
        (let ((tmp_77 ((_ extract 1 1) tmp_1)))
        (let ((tmp_78 (= tmp_77 #b1)))
        (let ((tmp_79 (ite tmp_78 tmp_76 #b0000000000000000000000000000000)))
        (let ((tmp_80 (concat tmp_79 #b0)))
        (let ((tmp_81 (concat #x0000 tmp_2)))
        (let ((tmp_82 ((_ extract 0 0) tmp_1)))
        (let ((tmp_83 (= tmp_82 #b1)))
        (let ((tmp_84 (ite tmp_83 tmp_81 #x00000000)))
        (let ((tmp_85 (concat #b0 tmp_0)))
        (let ((tmp_86 ((_ extract 15 15) tmp)))
        (let ((tmp_87 (= tmp_86 #b1)))
        (let ((tmp_88 (ite tmp_87 tmp_85 #b00000000000000000)))
        (let ((tmp_89 (concat tmp_88 #b000000000000000)))
        (let ((tmp_90 (concat #b00 tmp_0)))
        (let ((tmp_91 ((_ extract 14 14) tmp)))
        (let ((tmp_92 (= tmp_91 #b1)))
        (let ((tmp_93 (ite tmp_92 tmp_90 #b000000000000000000)))
        (let ((tmp_94 (concat tmp_93 #b00000000000000)))
        (let ((tmp_95 (concat #b000 tmp_0)))
        (let ((tmp_96 ((_ extract 13 13) tmp)))
        (let ((tmp_97 (= tmp_96 #b1)))
        (let ((tmp_98 (ite tmp_97 tmp_95 #b0000000000000000000)))
        (let ((tmp_99 (concat tmp_98 #b0000000000000)))
        (let ((tmp_100 (concat #x0 tmp_0)))
        (let ((tmp_101 ((_ extract 12 12) tmp)))
        (let ((tmp_102 (= tmp_101 #b1)))
        (let ((tmp_103 (ite tmp_102 tmp_100 #x00000)))
        (let ((tmp_104 (concat tmp_103 #x000)))
        (let ((tmp_105 (concat #b00000 tmp_0)))
        (let ((tmp_106 ((_ extract 11 11) tmp)))
        (let ((tmp_107 (= tmp_106 #b1)))
        (let ((tmp_108 (ite tmp_107 tmp_105 #b000000000000000000000)))
        (let ((tmp_109 (concat tmp_108 #b00000000000)))
        (let ((tmp_110 (concat #b000000 tmp_0)))
        (let ((tmp_111 ((_ extract 10 10) tmp)))
        (let ((tmp_112 (= tmp_111 #b1)))
        (let ((tmp_113 (ite tmp_112 tmp_110 #b0000000000000000000000)))
        (let ((tmp_114 (concat tmp_113 #b0000000000)))
        (let ((tmp_115 (concat #b0000000 tmp_0)))
        (let ((tmp_116 ((_ extract 9 9) tmp)))
        (let ((tmp_117 (= tmp_116 #b1)))
        (let ((tmp_118 (ite tmp_117 tmp_115 #b00000000000000000000000)))
        (let ((tmp_119 (concat tmp_118 #b000000000)))
        (let ((tmp_120 (concat #x00 tmp_0)))
        (let ((tmp_121 ((_ extract 8 8) tmp)))
        (let ((tmp_122 (= tmp_121 #b1)))
        (let ((tmp_123 (ite tmp_122 tmp_120 #x000000)))
        (let ((tmp_124 (concat tmp_123 #x00)))
        (let ((tmp_125 (concat #b000000000 tmp_0)))
        (let ((tmp_126 ((_ extract 7 7) tmp)))
        (let ((tmp_127 (= tmp_126 #b1)))
        (let ((tmp_128 (ite tmp_127 tmp_125 #b0000000000000000000000000)))
        (let ((tmp_129 (concat tmp_128 #b0000000)))
        (let ((tmp_130 (concat #b0000000000 tmp_0)))
        (let ((tmp_131 ((_ extract 6 6) tmp)))
        (let ((tmp_132 (= tmp_131 #b1)))
        (let ((tmp_133 (ite tmp_132 tmp_130 #b00000000000000000000000000)))
        (let ((tmp_134 (concat tmp_133 #b000000)))
        (let ((tmp_135 (concat #b00000000000 tmp_0)))
        (let ((tmp_136 ((_ extract 5 5) tmp)))
        (let ((tmp_137 (= tmp_136 #b1)))
        (let ((tmp_138 (ite tmp_137 tmp_135 #b000000000000000000000000000)))
        (let ((tmp_139 (concat tmp_138 #b00000)))
        (let ((tmp_140 (concat #x000 tmp_0)))
        (let ((tmp_141 ((_ extract 4 4) tmp)))
        (let ((tmp_142 (= tmp_141 #b1)))
        (let ((tmp_143 (ite tmp_142 tmp_140 #x0000000)))
        (let ((tmp_144 (concat tmp_143 #x0)))
        (let ((tmp_145 (concat #b0000000000000 tmp_0)))
        (let ((tmp_146 ((_ extract 3 3) tmp)))
        (let ((tmp_147 (= tmp_146 #b1)))
        (let ((tmp_148 (ite tmp_147 tmp_145 #b00000000000000000000000000000)))
        (let ((tmp_149 (concat tmp_148 #b000)))
        (let ((tmp_150 (concat #b00000000000000 tmp_0)))
        (let ((tmp_151 ((_ extract 2 2) tmp)))
        (let ((tmp_152 (= tmp_151 #b1)))
        (let ((tmp_153 (ite tmp_152 tmp_150 #b000000000000000000000000000000)))
        (let ((tmp_154 (concat tmp_153 #b00)))
        (let ((tmp_155 (concat #b000000000000000 tmp_0)))
        (let ((tmp_156 ((_ extract 1 1) tmp)))
        (let ((tmp_157 (= tmp_156 #b1)))
        (let ((tmp_158 (ite tmp_157 tmp_155 #b0000000000000000000000000000000)))
        (let ((tmp_159 (concat tmp_158 #b0)))
        (let ((tmp_160 (concat #x0000 tmp_0)))
        (let ((tmp_161 ((_ extract 0 0) tmp)))
        (let ((tmp_162 (= tmp_161 #b1)))
        (let ((tmp_163 (ite tmp_162 tmp_160 #x00000000)))
        (let ((tmp_164 (bvadd tmp_163 tmp_159)))
        (let ((tmp_165 (bvadd tmp_164 tmp_154)))
        (let ((tmp_166 (bvadd tmp_165 tmp_149)))
        (let ((tmp_167 (bvadd tmp_166 tmp_144)))
        (let ((tmp_168 (bvadd tmp_167 tmp_139)))
        (let ((tmp_169 (bvadd tmp_168 tmp_134)))
        (let ((tmp_170 (bvadd tmp_169 tmp_129)))
        (let ((tmp_171 (bvadd tmp_170 tmp_124)))
        (let ((tmp_172 (bvadd tmp_171 tmp_119)))
        (let ((tmp_173 (bvadd tmp_172 tmp_114)))
        (let ((tmp_174 (bvadd tmp_173 tmp_109)))
        (let ((tmp_175 (bvadd tmp_174 tmp_104)))
        (let ((tmp_176 (bvadd tmp_175 tmp_99)))
        (let ((tmp_177 (bvadd tmp_176 tmp_94)))
        (let ((tmp_178 (bvadd tmp_177 tmp_89)))
        (let ((tmp_179 (bvadd tmp_178 tmp_84)))
        (let ((tmp_180 (bvadd tmp_179 tmp_80)))
        (let ((tmp_181 (bvadd tmp_180 tmp_75)))
        (let ((tmp_182 (bvadd tmp_181 tmp_70)))
        (let ((tmp_183 (bvadd tmp_182 tmp_65)))
        (let ((tmp_184 (bvadd tmp_183 tmp_60)))
        (let ((tmp_185 (bvadd tmp_184 tmp_55)))
        (let ((tmp_186 (bvadd tmp_185 tmp_50)))
        (let ((tmp_187 (bvadd tmp_186 tmp_45)))
        (let ((tmp_188 (bvadd tmp_187 tmp_40)))
        (let ((tmp_189 (bvadd tmp_188 tmp_35)))
        (let ((tmp_190 (bvadd tmp_189 tmp_30)))
        (let ((tmp_191 (bvadd tmp_190 tmp_25)))
        (let ((tmp_192 (bvadd tmp_191 tmp_20)))
        (let ((tmp_193 (bvadd tmp_192 tmp_15)))
        (let ((tmp_194 (bvadd tmp_193 tmp_10)))
        (let ((tmp_195 (= tmp_194 tmp_5)))
        tmp_195))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (let ((tmp_196 (bvadd tmp_3 tmp_4)))
        (let ((tmp_197 (concat #x0000 tmp_2)))
        (let ((tmp_198 (concat #x0000 tmp_1)))
        (let ((tmp_199 (bvmul tmp_198 tmp_197)))
        (let ((tmp_200 (concat #x0000 tmp_0)))
        (let ((tmp_201 (concat #x0000 tmp)))
        (let ((tmp_202 (bvmul tmp_201 tmp_200)))
        (let ((tmp_203 (bvadd tmp_202 tmp_199)))
        (let ((tmp_204 (distinct tmp_203 tmp_196)))
        tmp_204))))))))))
(check-sat)
(reset)
